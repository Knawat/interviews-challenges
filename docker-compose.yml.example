version: "2.0"

services:

  nats:
    image: nats
  
  redis:
    image: redis:alpine
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
  
  api:
    build:
      context: .
    image: interviews-challenges
    restart: always
    env_file: .env
    environment:
      SERVICES: api
    links:
      - nats
      - redis
    depends_on:
      - nats
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.backend=api"
      - "traefik.port=3000"
      - "traefik.frontend.entryPoints=http"
      - "traefik.frontend.rule=PathPrefix:/"
  
  auth:
    build:
      context: .
    image: interviews-challenges
    restart: always
    env_file: .env
    environment:
      SERVICES: auth
    links:
      - nats
      - redis
      - elastic
    depends_on:
      - nats
      - redis
      - elastic
  
  products:
    build:
      context: .
    image: interviews-challenges
    restart: always
    env_file: .env
    environment:
      SERVICES: product
    links:
      - nats
      - redis
      - elastic
    depends_on:
      - nats
      - redis
      - elastic
  
  elastic:
    build:
      context: .
    image: interviews-challenges
    restart: always
    env_file: .env
    environment:
      SERVICES: elastic
    links:
    - nats
    - redis
    depends_on:
    - nats
    - redis
    - elasticsearch
    
  traefik:
    image: traefik
    command: --web --docker --docker.domain=docker.localhost --logLevel=INFO --docker.exposedbydefault=false
    ports:
      - "3000:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.